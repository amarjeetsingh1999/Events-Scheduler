{"version":3,"sources":["Components/Header.js","apollo.js","queries.js","Adder.js","Components/ScheduleCard.js","Viewer.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","window","scrollY","header","document","querySelector","addEventListener","classList","add","remove","className","this","props","title","Component","ApolloClient","uri","GET_SCHEDULES","gql","SUBMIT_SCHEDULE","Adder","onSubmit","a","id","day","month","s_time","s_time_ap","e_time","e_time_ap","notes","input","client","mutate","variables","mutation","refetchQueries","query","onClose","initialValues","schedule","render","handleSubmit","pristine","invalid","Modal","isOpen","toggle","Form","ModalHeader","ModalBody","FormGroup","Label","required","name","component","Row","form","Col","md","placeholder","ModalFooter","Button","type","disabled","color","onClick","ScheduleCard","cardRef","React","createRef","ref","current","onAnimationEnd","event_month","event_day","event_title","event_stime","event_stimeap","event_etime","event_etimeap","event_notes","Viewer","loading","error","data","style","console","log","schedules","length","map","key","Footer","data-toggle","data-placement","href","App","state","inserting","size","setState","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.21a6d43a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    componentDidMount(){\r\n        var scrollpos = window.scrollY;\r\n        var header = document.querySelector(\"header\");\r\n\r\n        function addClass(){\r\n            header.classList.add(\"small\");\r\n        }\r\n\r\n        function removeClass(){\r\n            header.classList.remove(\"small\");\r\n        }\r\n\r\n        window.addEventListener('scroll', function(){ \r\n            scrollpos = window.scrollY;\r\n    \r\n            if(scrollpos > 60){\r\n                addClass();\r\n            }\r\n            else {\r\n                removeClass();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"cf\">\r\n                <nav>\r\n                    <h1 className=\"title\">{this.props.title}</h1>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import ApolloClient from 'apollo-boost';\r\n\r\nexport default new ApolloClient({\r\n  uri: \"https://scheduler-learncool.herokuapp.com/v1/graphql\",\r\n});","import gql from 'graphql-tag';\r\n\r\nexport const GET_SCHEDULES = gql`\r\n  query GetSchedules {\r\n    schedules {\r\n      id\r\n      title\r\n      day\r\n      month\r\n      s_time\r\n      s_time_ap\r\n      e_time\r\n      e_time_ap\r\n      notes\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SUBMIT_SCHEDULE = gql`\r\n  mutation insert_schedules_one($input: schedules_insert_input!) {\r\n    insert_schedules_one(object: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_SCHEDULE = gql`\r\n  mutation update_a_schedule($prev_id: schedules_pk_columns_input!, $input: schedules_set_input!){\r\n    update_schedules_by_pk(\r\n      pk_columns: $prev_id,\r\n      _set: $input\r\n    ){\r\n        id\r\n        title\r\n        day\r\n        month\r\n        s_time\r\n        s_time_ap\r\n        e_time\r\n        e_time_ap\r\n        notes\r\n    }\r\n  }\r\n`;","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\r\nimport { Form as FinalForm, Field } from 'react-final-form';\r\nimport client from './apollo';\r\nimport { GET_SCHEDULES, SUBMIT_SCHEDULE } from './queries';\r\n\r\nclass Adder extends Component {\r\n  render() {\r\n    return (\r\n      <FinalForm\r\n        onSubmit={async ({ id, title, day, month, s_time, s_time_ap, e_time, e_time_ap, notes }) => {\r\n          const input = { id, title, day, month, s_time, s_time_ap, e_time, e_time_ap, notes };\r\n\r\n          await client.mutate({\r\n            variables: { input },\r\n            mutation: SUBMIT_SCHEDULE,\r\n            refetchQueries: () => [{ query: GET_SCHEDULES }],\r\n          });\r\n\r\n          this.props.onClose();\r\n        }}\r\n\r\n        initialValues={this.props.schedule}\r\n\r\n        render={({ handleSubmit, pristine, invalid }) => (\r\n          <Modal isOpen toggle={this.props.onClose}>\r\n            <Form onSubmit={handleSubmit}>\r\n              <ModalHeader toggle={this.props.onClose}>\r\n                New Schedule\r\n              </ModalHeader>\r\n\r\n              <ModalBody>\r\n\r\n                <FormGroup>\r\n                  <Label>Title</Label>\r\n                  <Field\r\n                    required\r\n                    name=\"title\"\r\n                    className=\"form-control\"\r\n                    component=\"input\"\r\n                  />\r\n                </FormGroup>\r\n\r\n                <Row form>\r\n                  <Col md={4}>\r\n                    <FormGroup>\r\n                      <Label>Day</Label>\r\n                      <Field\r\n                        required\r\n                        name=\"day\"\r\n                        className=\"form-control\"\r\n                        component=\"input\"\r\n                        placeholder=\"date\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col md={4}>\r\n                    <FormGroup>\r\n                      <Label>Month</Label>\r\n                      <Field\r\n                        required\r\n                        name=\"month\"\r\n                        className=\"form-control\"\r\n                        component=\"input\"\r\n                        placeholder=\"Jan/Feb/...\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row form>\r\n                  <Col md={3}>\r\n                    <FormGroup>\r\n                      <Label>Start Time</Label>\r\n                      <Field\r\n                        required\r\n                        name=\"s_time\"\r\n                        className=\"form-control\"\r\n                        component=\"input\"\r\n                        placeholder=\"12h format\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col md={3}>\r\n                    <FormGroup>\r\n                      <Label>am/pm</Label>\r\n                      <Field\r\n                        required\r\n                        name=\"s_time_ap\"\r\n                        className=\"form-control\"\r\n                        component=\"input\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row form>\r\n                  <Col md={3}>\r\n                    <FormGroup>\r\n                      <Label>End Time</Label>\r\n                      <Field\r\n                        required\r\n                        name=\"e_time\"\r\n                        className=\"form-control\"\r\n                        component=\"input\"\r\n                        placeholder=\"12h format\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col md={3}>\r\n                    <FormGroup>\r\n                      <Label>am/pm</Label>\r\n                      <Field\r\n                        required\r\n                        name=\"e_time_ap\"\r\n                        className=\"form-control\"\r\n                        component=\"input\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <FormGroup>\r\n                  <Label>Notes</Label>\r\n                  <Field\r\n                    name=\"notes\"\r\n                    className=\"form-control\"\r\n                    component=\"input\"\r\n                    placeholder=\"Any additional notes....\"\r\n                  />\r\n                </FormGroup>\r\n\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                <Button type=\"submit\" disabled={pristine} color=\"primary\">Save</Button>\r\n                <Button color=\"secondary\" onClick={this.props.onClose}>Cancel</Button>\r\n              </ModalFooter>\r\n\r\n            </Form>\r\n          </Modal>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Adder;","import React, { Component } from 'react';\r\nimport './ScheduleCard.css';\r\n\r\nclass ScheduleCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cardRef = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-card-container\">\r\n                <div className=\"calendar-card\"\r\n                    ref={this.cardRef}\r\n                    onClick={() => {\r\n                        this.cardRef.current.classList.add(\"shake\");\r\n                    }}\r\n                    onAnimationEnd={() => {\r\n                        this.cardRef.current.classList.remove(\"shake\");\r\n                    }}\r\n                    >\r\n                    <div className=\"card-header\">\r\n                        <div className=\"calendar-box\">\r\n                            <div className=\"month\">{this.props.event_month}</div>\r\n                            <div className=\"day\">{this.props.event_day}</div>\r\n                        </div>\r\n                        <div className=\"card-text-aside\">\r\n                            <div className=\"day-name\">{this.props.event_title}</div>\r\n                            <div className=\"time\">{this.props.event_stime} {this.props.event_stimeap} - {this.props.event_etime} {this.props.event_etimeap}</div>\r\n                            <div className=\"notes\">{this.props.event_notes}</div>\r\n                        </div>\r\n                        <div className=\"calendar-right\">\r\n                            <i className=\"fa fa-calendar\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScheduleCard;","import React, { Component } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport ScheduleCard from './Components/ScheduleCard';\r\nimport { GET_SCHEDULES } from './queries';\r\n\r\nclass Viewer extends Component {\r\n  render() {\r\n    return (\r\n      <Query query={GET_SCHEDULES}>\r\n        {({ loading, error, data }) => {\r\n          if (loading) {\r\n            return (<div style={{\"textAlign\": \"center\"}}>LOADING.....</div>);\r\n          }\r\n          if (error) return (console.log(error));\r\n\r\n          if (data.schedules.length) {\r\n            return (\r\n              <div style={{ \"paddingBottom\": \"6rem\" }}>\r\n                {data.schedules.map(schedule => (\r\n                  <ScheduleCard\r\n                    key={schedule.id}\r\n                    event_title={schedule.title}\r\n                    event_day={schedule.day}\r\n                    event_month={schedule.month}\r\n                    event_stime={schedule.s_time}\r\n                    event_stimeap={schedule.s_time_ap}\r\n                    event_etime={schedule.e_time}\r\n                    event_etimeap={schedule.e_time_ap}\r\n                    event_notes={schedule.notes}\r\n                  />\r\n                ))}\r\n              </div>\r\n            );\r\n          }\r\n\r\n          else{\r\n            return (<div style={{\"textAlign\": \"center\"}}>Get something scheduled!</div>);\r\n          }\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Viewer;","import React, { Component } from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer id='social-footer'>\r\n                <ul>\r\n                    <li className='highlight'>\r\n                        <a className=\"fa-stack fa-1x\" data-toggle=\"tooltip\" title=\"Email\" data-placement=\"top\" href=\"#root\">\r\n                            <i className=\"fa fa-square fa-stack-2x\"></i>\r\n                            <i className=\"fa fa-envelope fa-stack-1x blacktext\"></i>\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li className='highlight'>\r\n                        <a className=\"fa-stack fa-1x\" data-toggle=\"tooltip\" title=\"Linkedin\" data-placement=\"top\" href=\"#root\"><i className=\"fa fa-linkedin-square fa-stack-2x\"></i></a>\r\n                    </li>\r\n\r\n                    <li className='highlight'>\r\n                        <a className=\"fa-stack fa-1x\" data-toggle=\"tooltip\" title=\"Twitter\" data-placement=\"top\" href=\"#root\"><i className=\"fa fa-twitter-square fa-stack-2x\"></i></a>\r\n                    </li>\r\n\r\n                    <li className='highlight'>\r\n                        <a className=\"fa-stack fa-1x\" data-toggle=\"tooltip\" title=\"GitHub\" data-placement=\"top\" href=\"#root\"><i className=\"fa fa-github-square fa-stack-2x\"></i></a>\r\n                    </li>\r\n\r\n                    <li className='highlight'>\r\n                        <a className=\"fa-stack fa-1x\" data-toggle=\"tooltip\" title=\"Facebook\" data-placement=\"top\" href=\"#root\"><i className=\"fa fa-facebook-square fa-stack-2x\"></i></a>\r\n                    </li>\r\n\r\n                    <li className='highlight'>\r\n                        <a className=\"fa-stack fa-1x\" data-toggle=\"tooltip\" title=\"Instagram\" data-placement=\"top\" href=\"#root\"><i className=\"fa fa-instagram fa-stack-2x\"></i></a>\r\n                    </li>\r\n\r\n                    <li className='highlight'>\r\n                        <a className=\"fa-stack fa-1x\" data-toggle=\"tooltip\" title=\"Google+\" data-placement=\"top\" href=\"#root\"><i className=\"fa fa-google-plus-square fa-stack-2x\"></i></a>\r\n                    </li>\r\n\r\n                </ul>\r\n\r\n                <div className=\"text-center copyright\"> ©2020 Amarjeet Singh\r\n                </div>\r\n\r\n\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport './App.css';\n\nimport Header from './Components/Header';\nimport Adder from './Adder';\nimport Viewer from './Viewer';\nimport Footer from './Components/Footer';\n\nclass App extends Component {\n  state = {\n    inserting: null,\n  };\n\n  render() {\n    const { inserting } = this.state;\n\n    return (\n      <div className=\"main-container\">\n        <Header title=\"SCHEDULES\" />\n\n        <div className=\"button-container\">\n          <Button\n            className=\"my-2\"\n            size= \"lg\"\n            style= {{\"backgroundColor\": \"#000205\"}}\n            onClick={() => this.setState({ inserting: {} })}\n          >\n            Add Schedule\n          </Button>\n        </div>\n\n        <Viewer />\n\n        {inserting && (\n          <Adder\n            schedule={inserting}\n            onClose={() => this.setState({ inserting: null })}\n          />\n        )}\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport client from './apollo';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nif (module.hot) module.hot.accept();"],"sourceRoot":""}